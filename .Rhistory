tempIndex = 1
for (i in 24:max(simps$season)) {
temp <- get_season(i)
tempGG <- ggplot(temp, aes(x = id, y = as.numeric(us_viewers_in_millions))) + geom_point() +
ggtitle(glue('Season {i}'))
set3[[tempIndex]] = tempGG
tempIndex = tempIndex + 1
}
grid.arrange(grobs = set3, ncol = 3, nrow=4)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(ggplot2)
library(lattice)
library(grid)
library(glue) #
library(gridExtra)
library(tidyverse)
library(dplyr)
library(tibble)
library(stringr) #strspit
tempPlot <- ggplot(data = simpsons, aes(x = id, y = rating, col = as.factor(season))) +
geom_point() + ylab("Rating") + xlab("Episode Number") + ggtitle("Rating vs Episode") +
geom_line()
simpsons <- read_csv("data/simpsons_episodes.csv")
desc_split <- strsplit(simpsons$description, " ")
length_description <- sapply(desc_split, function(x) sum(str_count(x, "\\S+")))
age <- difftime("2022-09-30", simpsons$original_air_date)
simpsons$length_description <- length_description
simpsons$age <- age
simpsons <- simpsons %>% dplyr::rename(viewers = us_viewers_in_millions)
simpsons <- simpsons %>% rename(rating = imdb_rating)
simpsons <- simpsons %>% rename(directors = directed_by)
simpsons <- simpsons %>% rename(writers = written_by)
simpsons[607,]$number_in_season = 12
simpsons[679,]$number_in_season = 19
simpsons[709,]$number_in_season = 6
tempPlot <- ggplot(data = simpsons, aes(x = id, y = rating, col = as.factor(season))) +
geom_point() + ylab("Rating") + xlab("Episode Number") + ggtitle("Rating vs Episode") +
geom_line()
ggplot(data = simpsons, aes(x=id, y = rating)) + geom_point()
ggplot(data = simpsons, aes(x=original_air_date, y = rating)) + geom_point()
tempPlot
tempPlot <- ggplot(data = simpsons, aes(x = id, y = rating, col = as.factor(season))) +
geom_point(aes(shape=as.factor(season))) + ylab("Rating") + xlab("Episode Number") + ggtitle("Rating vs Episode") +
geom_line()
tempPlot
length(
c(1,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81))
tempPlot <- ggplot(data = simpsons, aes(x = id, y = rating, col = as.factor(season))) +
geom_point() + ylab("Rating") + xlab("Episode Number") + ggtitle("Rating vs Episode") +
geom_line() + geom_line() +
scale_shape_manual(values = c(1,2,3,3,4,5,6,7,8,9,10,11,12,13,14,15,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81))
tempPlot
(tempPlot <- ggplot(data = simpsons, aes(x = id, y = rating, col = as.factor(season), shape=as.factor(season))) +
geom_point() + ylab("Rating") + xlab("Episode Number") + ggtitle("Rating vs Episode") +
geom_line() + geom_line() +
scale_shape_manual(values = rep(0:14, 3)))
tempPlot
ggplot(data=simpsons, aes(x = original_air_date, y = ratings)) + geom_point()
ggplot(data=simpsons, aes(x = original_air_date, y = rating)) + geom_point()
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(ggplot2)
library(lattice)
library(grid)
library(glue) #
library(gridExtra)
library(tidyverse)
library(dplyr)
library(tibble)
library(stringr) #strspit
ggplot(data=simpsons, aes(x = original_air_date, y = rating)) + geom_point(aes(color = season))
ggplot(data=simpsons, aes(x = original_air_date, y = rating)) + geom_point(aes(fil = season))
ggplot(data=simpsons, aes(x = original_air_date, y = rating)) + geom_point(aes(fill = season))
ggplot(data=simpsons, aes(x = original_air_date, y = rating)) + geom_point(aes(col = as.factor(season)))
ggplot(data=simpsons, aes(x = original_air_date, y = rating)) + geom_point(aes(col = as.factor(season))) + geom_smooth()
ggplot(data=simpsons, aes(x = original_air_date, y = rating)) + geom_point(aes(col = as.factor(season))) + geom_smooth(nethod="lm", se=FALSE)
ggplot(data=simpsons, aes(x = original_air_date, y = rating)) + geom_point(aes(col = as.factor(season))) + geom_smooth(data = get_season[1])
head(get_season(1))
ggplot(data=simpsons, aes(x = original_air_date, y = rating)) + geom_point(aes(col = as.factor(season))) + geom_smooth(data = get_season[1], aes(x=original_air_date, y = rating))
tempSeason1 <- get_season[1]
ggplot(data=simpsons, aes(x = original_air_date, y = rating)) + geom_point(aes(col = as.factor(season))) + geom_smooth(data = get_season(1), aes(x=original_air_date, y = rating))
simpsons <- read_csv("data/simpsons_episodes.csv")
desc_split <- strsplit(simpsons$description, " ")
length_description <- sapply(desc_split, function(x) sum(str_count(x, "\\S+")))
age <- difftime("2022-09-30", simpsons$original_air_date)
simpsons$length_description <- length_description
simpsons$age <- age
simpsons <- simpsons %>% dplyr::rename(viewers = us_viewers_in_millions)
simpsons <- simpsons %>% rename(rating = imdb_rating)
simpsons <- simpsons %>% rename(directors = directed_by)
simpsons <- simpsons %>% rename(writers = written_by)
ggplot(data=simpsons, aes(x = original_air_date, y = rating)) + geom_point(aes(col = as.factor(season))) + geom_smooth(data = get_season(1), aes(x=original_air_date, y = rating))
tempSeason1 <- get_season(1)
names(tempSeason11)
names(tempSeason1)
ggplot(data=simpsons, aes(x = original_air_date, y = rating)) + geom_point(aes(col = as.factor(season))) + geom_smooth(data = get_season(1), aes(x=original_air_date, y = imdb_rating))
ggplot(data=simpsons, aes(x = original_air_date, y = rating)) + geom_point(aes(col = as.factor(season))) + geom_smooth(data = get_season(1), aes(x=original_air_date, y = imdb_rating)) +
geom_smooth(data = get_season(2), aes(x=original_air_date, y = imdb_rating, col="2"))
ggplot(data=simpsons, aes(x = original_air_date, y = rating)) + geom_point(aes(col = as.factor(season))) + geom_smooth(method=lm, se=FALSE, fullrange=FALSE, aes(group=as.factor(season)))
ggplot(data=simpsons, aes(x = original_air_date, y = rating)) + geom_point(aes(col = as.factor(season))) + geom_smooth(method=lm, se=FALSE, fullrange=FALSE, aes(group=as.factor(season), col=as.factor(season)))
ggplot(data=simpsons, aes(x = original_air_date, y = rating)) + geom_point(aes(col = as.factor(season))) + geom_smooth(method=lm, se=FALSE, fullrange=FALSE, aes(group=as.factor(season), col=black))
ggplot(data=simpsons, aes(x = original_air_date, y = rating)) + geom_point(aes(col = as.factor(season))) + geom_smooth(method=lm, se=FALSE, fullrange=FALSE, aes(group=as.factor(season), col="black"))
ggplot(data=simpsons, aes(x = original_air_date, y = rating)) + geom_point(aes(col = as.factor(season))) + geom_smooth(method=lm, se=FALSE, fullrange=FALSE, aes(group=as.factor(season), col=1))
ggplot(data=simpsons, aes(x = original_air_date, y = rating)) + geom_point(aes(col = as.factor(season))) + geom_smooth(method=lm, se=FALSE, fullrange=FALSE, aes(group=as.factor(season), col="1"))
ggplot(data=simpsons, aes(x = original_air_date, y = rating)) + geom_point(aes(col = as.factor(season))) + geom_smooth(method=lm, se=FALSE, fullrange=FALSE, aes(group=as.factor(season), col="2"))
ggplot(data=simpsons, aes(x = original_air_date, y = rating)) + geom_point(aes(col = as.factor(season))) + geom_smooth(method=lm, se=FALSE, fullrange=FALSE, aes(group=as.factor(season), col="#000000"))
ggplot(data=simpsons, aes(x = original_air_date, y = rating)) + geom_point(aes(col = as.factor(season))) + geom_smooth(data = simpsons, method=lm, se=FALSE, fullrange=FALSE, aes(group=as.factor(season), col="#000000"))
(tempPlot <- ggplot(data = simpsons, aes(x = id, y = rating, col = as.factor(season), shape=as.factor(season))) +
geom_point() + ylab("Rating") + xlab("Episode Number") + ggtitle("Rating vs Episode") +
geom_line() + geom_line() +
scale_shape_manual(values = rep(0:14, 3)))
ggplot(data = simpsons, aes(x=id, y = rating)) + geom_point()
ggplot(data = simpsons, aes(x=original_air_date, y = rating)) + geom_point()
ggplot(data = simpsons, aes(x = season, y = rating)) + geom_boxplot
(ggplot(data = simpsons, aes(x = season, y = rating)) + geom_boxplot())
(ggplot(data = simpsons, aes(x = as.factor(season), y = rating)) + geom_boxplot())
(ggplot(data = simpsons, aes(x = as.factor(season), y = rating, fil=as.factor(season))) + geom_boxplot())
(ggplot(data = simpsons, aes(x = as.factor(season), y = rating, color=as.factor(season))) + geom_boxplot())
(ggplot(data = simpsons, aes(x = as.factor(season), y = viewers, color=as.factor(season))) + geom_boxplot())
(ggplot(data = simpsons, aes(x = as.factor(season), y = as.numeric(viewers), color=as.factor(season))) + geom_boxplot())
(ggplot(data = simpsons, aes(x = as.factor(season), y = rating, color=as.factor(season))) + geom_boxplot() + ggtitle("Ratings"))
(ggplot(data = simpsons, aes(x = as.factor(season), y = as.numeric(viewers), color=as.factor(season))) + geom_boxplot() + ggtitle("Viewers"))
length(unique(simpsons$writers))
unique(simpsons$writers)
length(unique(simpsons$directors))
View(unique(simpsons$writers))
unique(simpsons$writers)
View(unique(simpsons$writers))
View(unique(simpsons$writers))
View(simpsons$writers)
unique(simpsons$writers)
View(simpsons)
View(c(simpsons$writers))
View(unique(simpsons$writers))
? View
View(simpsons$writers)
View(as.data.frame(unique(simpsons$writers)))
View(simpsons[170,])
simpsons[simpson$writers="Story by : Bob KushellTeleplay by : John Swartzwelder",]
simpsons[simpson$writers=="Story by : Bob KushellTeleplay by : John Swartzwelder",]
simpsons[simpsons$writers=="Story by : Bob KushellTeleplay by : John Swartzwelder",]
simpsons[simpsons$id == 142,]
View(simpsons[simpsons$id == 142,])
mean(unique(simpsons$writers))
mean(length(simpsons$writers))
length(simpsons$writers)
head(simpsons$writers)
nchar(head(simpsons$writers))
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(ggplot2)
library(lattice)
library(grid)
library(glue) #
library(gridExtra)
library(tidyverse)
library(dplyr)
library(tibble)
library(stringr) #strspit
mean(nchar(simpsons$writers)
mean(nchar(simpsons$writers))
mean(nchar(simpsons$writers))
avgWriter <- simpsons[which(nchar(simpsons$writers) > 16.6069 )]
View(avgWriter)
avgWriter <- simpsons[which(nchar(simpsons$writers) > 16.6069 )m]
avgWriter <- simpsons[which(nchar(simpsons$writers) > 16.6069 ),]
View(avgWriter$writers)
View(simpsons$writers)
View(avgWriter)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(ggplot2)
library(lattice)
library(grid)
library(glue) #
library(gridExtra)
library(tidyverse)
library(dplyr)
library(tibble)
library(stringr) #strspit
simpsons <- read_csv("data/simpsons_episodes.csv")
desc_split <- strsplit(simpsons$description, " ")
length_description <- sapply(desc_split, function(x) sum(str_count(x, "\\S+")))
age <- difftime("2022-09-30", simpsons$original_air_date)
simpsons$length_description <- length_description
simpsons$age <- age
summary(simpsons$length_description)
which(max(simpsons$length_description))
where(max(simpsons$length_description))
? which
which(simpsons$length_description == 98)
simpsons[482,]
simpsons[which(simpsons$length_description == 5),]
simpsons$description[which(simpsons$length_description == 5),]
simpsons$description[which(simpsons$length_description == 5)]
simpsons <- simpsons %>% dplyr::rename(viewers = us_viewers_in_millions)
simpsons <- simpsons %>% rename(rating = imdb_rating)
simpsons <- simpsons %>% rename(directors = directed_by)
simpsons <- simpsons %>% rename(writers = written_by)
simpsons[607,]$number_in_season = 12
simpsons[679,]$number_in_season = 19
simpsons[709,]$number_in_season = 6
(ggplot(data = simpsons, aes(x = as.factor(season), y = rating, color=as.factor(season))) + geom_boxplot() + ggtitle("Ratings"))
(ggplot(data = simpsons, aes(x = as.factor(season), y = as.numeric(viewers), color=as.factor(season))) + geom_boxplot() + ggtitle("Viewers"))
?summary
tapply(simpsons$rating, simpsons$season, summary)
(ggplot(data = simpsons, aes(x = as.factor(season), y = rating, color=as.factor(season))) + geom_boxplot() + ggtitle("Ratings"))
#tapply(simpsons$rating, simpsons$season, summary)
(ggplot(data = simpsons, aes(x = as.factor(season), y = as.numeric(viewers), color=as.factor(season))) + geom_boxplot() + ggtitle("Viewers"))
which(is.na(as.numeric(simspons$viewers)))
which(is.na(as.numeric(simspsons$viewers)))
which(is.na(as.numeric(simpsons$viewers)))
simpsons[c(160, 161, 173),]
sum(is.na(simpsons))
tapply(simpsons$viewers, is.na())
is.na(simpsons$viewers)
class(simpsons$viewers)
summary(simpsons)
as.numeric(simpsons$viewers)
which(is.na(simpsons$viewers))
View(simpsons[c(160, 161, 173),])
simpsons <- read_csv("data/simpsons_episodes.csv")
#simpsons <- simpsons %>% dplyr::rename(viewers = us_viewers_in_millions)
simpsons$viewers <- as.numeric(simpsons$us_viewers_in_millions)
View(simpsons$us_viewers_in_millions[c(160, 161, 173)])
View(simpsons[c(160, 161, 173),])
summary(simpsons)
is.na(simpsons$us_viewers_in_millions)
View(simpsons$us_viewers_in_millions)
simpsons$us_viewers_in_millions
simpsons[c(160, 161, 173),c("us_viewers_in_millions", "viewers")]
simpsons$viewers <- as.numeric(simpsons$us_viewers_in_millions)
simpsons$viewers <- as.numeric(simpsons$us_viewers_in_millions)
which(is.na(as.numeric(simpsons$viewers)))
simpsons[c(160, 161, 173),c("us_viewers_in_millions", "viewers")]
View(simpsons[c(160, 161, 173),])
corr(simpsons$viewers, simpsons$imdb_rating)
cor(simpsons$viewers, simpsons$imdb_rating)
get_season <- function(season_num) {
tempDF <- simpsons %>% filter(season == season_num)
return(tempDF)
}
s8 <- get_season(8)
plot(s8$original_air_date, s8$imdb_rating)
plot(s8$original_air_date, s8$viewers)
cor(s8$original_air_date, s8$imdb_rating)
cor(s8$viewers, s8$imdb_rating)
library(mice)
install.packages('mice')
mice::md.pattern(simpsons)
simpsons[722,]
View(simpsons[722,])
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(ggplot2)
library(lattice)
library(grid)
library(glue) #
library(gridExtra)
library(tidyverse)
library(dplyr)
library(tibble)
library(mice) #md.pattern
library(stringr) #strspit
(ggplot(data = simpsons, aes(x = as.factor(season), y = rating, color=as.factor(season))) + geom_boxplot() + ggtitle("Ratings"))
(ggplot(data = simpsons, aes(x = as.factor(season), y = imdb_rating, color=as.factor(season))) + geom_boxplot() + ggtitle("Ratings"))
#tapply(simpsons$rating, simpsons$season, summary)
(ggplot(data = simpsons, aes(x = as.factor(season), y = as.numeric(viewers), color=as.factor(season))) + geom_boxplot() + ggtitle("Viewers"))
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(ggplot2)
library(lattice)
library(grid)
library(glue) #
library(gridExtra)
library(tidyverse)
library(dplyr)
library(tibble)
library(mice) #md.pattern
library(stringr) #strspit
simpsons <- read_csv("data/simpsons_episodes.csv")
dim(simpsons)
names(simpsons)
summary(simpsons)
sum(is.na(simpsons))
head(as_tibble(simpsons))
#tapply(simpsons$viewers, is.na())
desc_split <- strsplit(simpsons$description, " ")
length_description <- sapply(desc_split, function(x) sum(str_count(x, "\\S+")))
age <- difftime("2022-09-30", simpsons$original_air_date)
simpsons$length_description <- length_description
simpsons$age <- age
#simpsons <- simpsons %>% dplyr::rename(viewers = us_viewers_in_millions)
simpsons <- simpsons %>% rename(rating = imdb_rating)
simpsons <- simpsons %>% rename(directors = directed_by)
simpsons <- simpsons %>% rename(writers = written_by)
head(arrange(simpsons, desc(number_in_series)))
subsetDF <- c("id", "title", "production_code", "directors", "writers", "number_in_season", "number_in_series")
simpsons_sub <- simpsons[,subsetDF]
head(simpsons_sub)
simpsons[607,]$number_in_season = 12
simpsons[679,]$number_in_season = 19
simpsons[709,]$number_in_season = 6
simpsons$viewers <- as.numeric(simpsons$us_viewers_in_millions)
which(is.na(as.numeric(simpsons$viewers)))
simpsons[c(160, 161, 173),c("us_viewers_in_millions", "viewers")]
(ggplot(data = simpsons, aes(x = as.factor(season), y = imdb_rating, color=as.factor(season))) + geom_boxplot() + ggtitle("Ratings"))
(tempPlot <- ggplot(data = simpsons, aes(x = id, y = rating, col = as.factor(season), shape=as.factor(season))) +
geom_point() + ylab("Rating") + xlab("Episode Number") + ggtitle("Rating vs Episode") +
geom_line() + geom_line() +
scale_shape_manual(values = rep(0:14, 3)))
ggplot(data = simpsons, aes(x=id, y = rating)) + geom_point()
ggplot(data = simpsons, aes(x=original_air_date, y = rating)) + geom_point()
(ggplot(data = simpsons, aes(x = as.factor(season), y = rating, color=as.factor(season))) + geom_boxplot() + ggtitle("Ratings"))
(ggplot(data = simpsons, aes(x = as.factor(season), y = rating, color=as.factor(season))) + geom_boxplot() + ggtitle("Ratings")) + xlab("Season")
(ggplot(data = simpsons, aes(x = as.factor(season), y = rating, color=as.factor(season))) + geom_boxplot() + ggtitle("IMDB Rating vs Simpsons Seasons")) + xlab("Season") + ylab("Rating")
(ggplot(data = simpsons, aes(x = as.factor(season), y = rating, color=as.factor(season))) + geom_boxplot() + ggtitle("IMDB Rating vs Simpsons Seasons")) + xlab("Season") + ylab("Rating")
simpsons[which.max(simpsons$number_in_season),]
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(ggplot2)
library(lattice)
library(grid)
library(glue) #
library(gridExtra)
library(tidyverse)
library(dplyr)
library(tibble)
library(mice) #md.pattern
library(stringr) #strspit
library(plotly)
library(DT)
simpsons <- read_csv("data/simpsons_episodes.csv")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(ggplot2)
library(lattice)
library(grid)
library(glue) #
library(gridExtra)
library(tidyverse)
library(dplyr)
library(tibble)
library(mice) #md.pattern
library(stringr) #strspit
library(plotly)
library(DT)
simpsons <- read_csv("data/simpsons_episodes.csv")
dim(simpsons)
names(simpsons)
summary(simpsons)
sum(is.na(simpsons))
head(simpsons) %>% rmarkdown::paged_table()
desc_split <- strsplit(simpsons$description, " ")
length_description <- sapply(desc_split, function(x) sum(str_count(x, "\\S+")))
age <- difftime("2022-09-30", simpsons$original_air_date)
simpsons$length_description <- length_description
simpsons$age <- age
#simpsons <- simpsons %>% dplyr::rename(viewers = us_viewers_in_millions)
simpsons <- simpsons %>% rename(rating = imdb_rating)
simpsons <- simpsons %>% rename(directors = directed_by)
simpsons <- simpsons %>% rename(writers = written_by)
simpsons$season <- as.factor(simpsons$season)
summary(simpsons$length_description)
simpsons$description[which(simpsons$length_description == 5)]
rmarkdown::paged_table(head(arrange(simpsons, desc(number_in_series))))
#DT::datatable(head(arrange(simpsons, desc(number_in_series))))
subsetDF <- c("id", "title", "production_code", "directors", "writers", "number_in_season", "number_in_series")
simpsons_sub <- simpsons[,subsetDF]
subsetDF
#simpsons[which.max(simpsons$number_in_season),]
#head(arrange(simpsons, desc(number_in_season)))
rmarkdown::paged_table(head(arrange(simpsons_sub[c("id", "title","number_in_season")], desc(number_in_season))))
#simpsons[607,]$number_in_season = 12
#simpsons[679,]$number_in_season = 19
#simpsons[709,]$number_in_season = 6
old_simps <- simpsons
simpsons$viewers <- as.numeric(simpsons$us_viewers_in_millions)
which(is.na(as.numeric(simpsons$viewers)))
simpsons[c(160, 161, 173),c("us_viewers_in_millions", "viewers")]
simpsons_rm <- simpsons[-c(160, 161, 173),]
tempSimps <- simpsons_rm
#simpsons[607,]$number_in_season = 12
#simpsons[679,]$number_in_season = 19
#simpsons[709,]$number_in_season = 6
#(temp607 <- simpsons[608,])
(phatsby_vol1 <- tempSimps[tempSimps$id == 607,])
phatsby_vol1$id = 607
phatsby_vol1$title = "The Great Phatsby (Vol. I)"
phatsby_vol1$production_code = "WABF04"
phatsby_vol1$directors = "Chris Clements"
phatsby_vol1$writers = "Dan Greaney"
phatsby_vol1$number_in_season = 12
phatsby_vol1$number_in_series = 608
phatsby_vol2 <- phatsby_vol1
phatsby_vol2$id = 607
phatsby_vol2$title = "The Great Phatsby (Vol. II)"
phatsby_vol2$production_code = "WABF05"
phatsby_vol2$directors = "Timothy Bailey"
phatsby_vol2$writers = "Matt Selman"
phatsby_vol2$number_in_season = 13
phatsby_vol2$number_in_series = 609
tempSimps[tempSimps$id == 607,] = phatsby_vol1
tempSimps[nrow(tempSimps) + 1, ] = phatsby_vol2
#----------------
(warrin_priests1 <- tempSimps[tempSimps$id == 679,])
warrin_priests1$id = 679
warrin_priests1$title = "Warrin' Priests (Part One)"
warrin_priests1$production_code = "ZABF12"
warrin_priests1$directors = "Bob Anderson"
warrin_priests1$writers = "Pete Holmes"
warrin_priests1$number_in_season = 19
warrin_priests1$number_in_series = 681
warrin_priests2 <- warrin_priests1
#warrin_priests2$id = 680
warrin_priests2$title = "Warrin' Priests (Part Two)"
warrin_priests2$production_code = "ZABF13"
warrin_priests2$directors = "Matthew Nastuk"
#Same writer
warrin_priests2$number_in_season = 20
warrin_priests2$number_in_series = 682
tempSimps[tempSimps$id == 679,] <- warrin_priests1
tempSimps[nrow(tempSimps) + 1, ] <- warrin_priests2
#----------------
(simpsons[710,])
srs_flanders1 <- tempSimps[tempSimps$id == 709,]
srs_flanders1$id = 709
srs_flanders1$title = "A Serious Flanders (Part One)"
srs_flanders1$production_code = "QABF21"
srs_flanders1$directors = "Debbie Bruce Mahan"
srs_flanders1$writers = "Cesar Mazariegos"
srs_flanders1$number_in_season = 6
srs_flanders1$number_in_series = 712
srs_flanders2 <- srs_flanders1
srs_flanders2$title = "Warrin' Priests (Part One)"
srs_flanders2$production_code = "QABF22"
srs_flanders2$directors = "Matthew Faughnan"
srs_flanders2$number_in_season = 7
srs_flanders2$number_in_series = 713
tempSimps[tempSimps$id == 709,] <- srs_flanders1
tempSimps[nrow(tempSimps) + 1, ] <- srs_flanders2
rating_v_sason <- ggplot(data = tempSimps, aes(x = as.factor(season), y = rating, color = as.factor(season)))
temp <- ggplot(data = tempSimps, aes(x = as.factor(season), y = rating, color=as.factor(season))) + geom_boxplot() + ggtitle("IMDB Rating vs Simpsons Seasons") + xlab("Season") + ylab("Rating") + theme(legend.position = "none") +
scale_y_continuous(name="IMDB Rating",limits=c(4, 10))
ggplotly(temp)
sznAvg <- tempSimps %>% group_by(season) %>% summarise(sznAvg = mean(rating))
temp2 <- ggplot(data = sznAvg, aes(x = season, y = sznAvg)) + geom_point() + ggtitle("Average IMDB Rating vs Simpsons Season") + xlab("Season") + ylab("Average IMDB Rating")
ggplotly(temp2)
tempSimps[tempSimps$season == 16,]
tempSimps[tempSimps$id == 342,]
tempViewers <- ggplot(data = tempSimps, aes(x = as.factor(season), y = as.numeric(viewers), color=as.factor(season))) + geom_boxplot() + ggtitle("Viewers vs Simpsons Seasons") + xlab("Season") + ylab("Viewers (p/ mil)") +theme(legend.position = "none")
ggplotly(tempViewers)
tempPlot <- ggplot(data = tempSimps,
aes(x = id, y = rating, col = as.factor(season), shape=as.factor(season))) + geom_point() +
ylab("Rating") + xlab("Episode Number") + ggtitle("Rating vs Episode") +
geom_line() + geom_line() + scale_shape_manual(values = rep(0:14, 3)) +
theme(legend.position = "none") + scale_y_continuous(name="IMDB Rating", limits=c(4,10))
ggplotly(tempPlot)
#ggplot(data = simpsons, aes(x=id, y = rating)) + geom_point()
#ggplot(data = simpsons, aes(x=original_air_date, y = rating)) + geom_point()
tempPlot <- ggplot(data=tempSimps,
aes(x = id, y = viewers, col = as.factor(season), shape=as.factor(season))) + geom_point() + ylab("Viewer") + xlab("Episode Number") + ggtitle("Episode vs Viewer") + geom_line() + geom_line() +
scale_shape_manual(values = rep(0:14, 3)) + theme(legend.position = "none")
ggplotly(tempPlot)
#ggplot(data = simpsons, aes(x=id, y = rating)) + geom_point()
#ggplot(data = simpsons, aes(x=original_air_date, y = rating)) + geom_point()
get_season <- function(season_num) {
tempDF <- tempSimps %>% filter(season == season_num)
return(tempDF)
}
s8 <- get_season(8)
set1 <- c()
set2 <- c()
set3 <- c()
plot_data_column = function (data) {
ggplot(data, aes_string(x = number_in_season, y = as.numeric(us_viewers_in_millions))) +
geom_point()
}
myplots <- lapply(1:12, plot_data_column, data = get_season(i))
for (i in 1:12) {
temp <- get_season(i)
tempGG <- ggplot(temp, aes(x = id, y = viewers)) + geom_point() +
ggtitle(glue('Season {i}'))
set1[[i]] = tempGG
}
#
for (i in 1:10) {
print(set1[i])
}
grid.arrange(grabs = set1, ncol = 3, nrow = 4)
subplot(set1[[1]])
s1 <- get_season(1)
ggplot(s1, aes(x = id, y = as.numeric(us_viewers_in_millions))) + geom_point()
for (i in 1:10) {
print(set1[i])
}
View(set1)
for (i in 1:12) {
temp <- get_season(i)
tempGG <- ggplot(temp, aes(x = id, y = viewers)) + geom_point() +
ggtitle(glue('Season {i}'))
set1[[i]] = tempGG
}
set1 <- c()
for (i in 1:12) {
temp <- get_season(i)
tempGG <- ggplot(temp, aes(x = id, y = viewers)) + geom_point() +
ggtitle(glue('Season {i}'))
set1[[i]] = tempGG
}
grid.arrange(set1[[1]], set1[[2]], set1[[3]], set1[[4]], ncol=2, nrow=2)
